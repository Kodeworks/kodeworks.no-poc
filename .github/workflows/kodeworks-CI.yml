# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Continous integration

on:
  pull_request:
    branches: [main]

jobs:
  change-detection:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      appRelated: ${{ steps.filter.outputs.appRelated }}
      storybook: ${{ steps.filter.outputs.storybook }}
      notAppRelated: ${{ steps.filter.outputs.notAppRelated }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - name: Run change detection
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            storybook:
              - '.storybook/**'
              - 'stories/**'
              - 'components/**'
              - '**.stories.js'
              - 'package.json'
              - 'yarn.lock'
              - 'postcss.config.js'
            notAppRelated: &notAppRelated
              - '.github/**'
              - '.vscode/**'
              - 'README.md'
            appRelated:
              - '!(*notAppRelated)'
      - name: Why jobs are skipped or not
        run: |
          echo "skipping job tests: ${{ steps.filter.outputs.appRelated == 'false'}"
          echo "skipping job build-and-export-static-pages: ${{ steps.filter.outputs.appRelated == 'false' }}"
          echo "skipping job build-storybook: ${{ steps.filter.outputs.storybook == 'false'}}"
          echo ""
          echo "Jobs use the output from the change detection step above to decide whether to run or not."

  tests:
    needs: [change-detection]
    if: ${{ needs.change-detection.outputs.appRelated == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn test:ci
      - uses: actions/upload-artifact@v2 # upload test results for test-report.yml
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-results
          path: reports/jest-junit.xml
      - name: Set flag to run Test Report
        if: always() # run this step even if previous step failed
        run: echo '::set-output name=RUN_TEST_REPORT::true'
        id: random-color-generator

  build-and-export-static-pages:
    needs: [change-detection, tests]
    if: ${{ needs.change-detection.outputs.appRelated == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn run build
        env:
          NEXT_PUBLIC_BASE_PATH: /kodeworks.no-poc
      - run: yarn run export
        env:
          NEXT_PUBLIC_BASE_PATH: /kodeworks.no-poc

  build-storybook:
    needs: [change-detection, tests]
    if: ${{ needs.change-detection.outputs.storybook == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn run build-storybook
        env:
          NEXT_PUBLIC_BASE_PATH: /kodeworks.no-poc
